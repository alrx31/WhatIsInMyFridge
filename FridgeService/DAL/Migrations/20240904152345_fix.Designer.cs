// <auto-generated />
using System;
using DAL.Persistanse;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240904152345_fix")]
    partial class fix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.Fridge", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("boughtDate")
                        .HasColumnType("integer");

                    b.Property<int>("boxNumber")
                        .HasColumnType("integer");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("serial")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("fridges");
                });

            modelBuilder.Entity("DAL.Entities.ProductFridgeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("addTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("count")
                        .HasColumnType("integer");

                    b.Property<int>("fridgeId")
                        .HasColumnType("integer");

                    b.Property<int>("productId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("fridgeId");

                    b.ToTable("productFridgeModels");
                });

            modelBuilder.Entity("DAL.Entities.UserFridge", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("LinkTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("fridgeId")
                        .HasColumnType("integer");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("fridgeId");

                    b.ToTable("userFridges");
                });

            modelBuilder.Entity("DAL.Entities.ProductFridgeModel", b =>
                {
                    b.HasOne("DAL.Entities.Fridge", "Fridge")
                        .WithMany("products")
                        .HasForeignKey("fridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");
                });

            modelBuilder.Entity("DAL.Entities.UserFridge", b =>
                {
                    b.HasOne("DAL.Entities.Fridge", "fridge")
                        .WithMany("userModelIds")
                        .HasForeignKey("fridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fridge");
                });

            modelBuilder.Entity("DAL.Entities.Fridge", b =>
                {
                    b.Navigation("products");

                    b.Navigation("userModelIds");
                });
#pragma warning restore 612, 618
        }
    }
}
